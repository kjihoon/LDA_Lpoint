theta<-t(lda$document_sums)# document_sum : 특정 토픽에 존재하는 아이템 구매 빈도(id별) , id vs topic
for (i in 1:nrow(theta)) theta[i,] = theta[i,]/sum(theta[i,])
k<-ncol(theta)
phi<-lda$topics   # item vs topic
for(i in 1:k) phi[i,] = phi[i,]/sum(phi[i,])
p=colSums(lda$topics)/sum(lda$topics)  ## 단일 품목의 support 특정상품빈도/전체빈도
w<-ncol(phi)-1
p<-p[-1]
phi<-phi[,-1]
lift = matrix(0,nrow=k,ncol=w)
colnames(lift)<-itemname
for (i in 1:k){
lift[i,p!=0]=phi[i,p!=0]/p[p!=0]
if(length(lift[i,p==0])!=0){
lift[i,p==0]=0
}
}
topic_name<-c()  ##lift 값 기준 크기순 2개의 아이템
for (i in 1:k){
sorted=sort(lift[i,],decreasing = T)[1:2]
topic_name<-append(topic_name,paste(names(sorted),collapse = "-"))
}
colnames(theta)<-topic_name
#colnames(theta)<-paste0("Topic",c(1:k))
resultlist[[1]]<-theta
resultlist[[2]]<-phi
resultlist[[3]]<-p
resultlist[[4]]<-lift
names(resultlist)<-c("theta","phi","p","lift")
return(resultlist)
}
################################################################1.데이터 임포트
install.packages("stringr");library(stringr)
install.packages("gtools");library(gtools)
install.packages("ggplot2");library(ggplot2)
install.packages("reshape2");library(reshape2)
install.packages("lda");library(lda)
install.packages("arules");library(arules)
install.packages("dplyr");library(dplyr)
library(igraph)
#install.packages("arulesViz");library(arulseVis)
###data import
set1<-read.table("제4회 Big Data Competition-분석용데이터-01.고객DEMO.txt",sep=",",header=T)
set1$HOM_PST_NO<-na.replace(set1$HOM_PST_NO,999) ## 거주지 na =999
set1<-as.data.frame(lapply(set1,as.factor))
#set2
set2<-read.table("제4회 Big Data Competition-분석용데이터-02.쇼핑업종 상품구매.txt",sep=",",header=T)
#set3
set3<-read.table("제4회 Big Data Competition-분석용데이터-03.쇼핑외 업종 상품구매.txt",sep=",",header=T)
#set4
set4<-readLines("제4회 Big Data Competition-분석용데이터-04.쇼핑업종 상품분류.txt",encoding="UTF-8")
set4<-str_replace_all(set4,",","\t");write(set4,"set4.txt")
set4<-read.table("set4.txt",sep="\t",header=T)
set4<-as.data.frame(lapply(set4,str_replace_all,pattern="\t",replace="/"))
## set2 merge
set2<-cbind(set2,iteminfo=paste0(set2$BIZ_UNIT,"_",set2$PD_S_C))
set4<-cbind(set4,iteminfo=paste0(set4$BIZ_UNIT,"_",set4$PD_S_C))
newset2<-merge(set2,set4[,-c(1:2)],by="iteminfo")
newset2<-cbind(newset2,"ID_DT"=paste0("ID",newset2$ID,"_",newset2$DE_DT))
# 업종별 구분
newset2_a01<-newset2[newset2$BIZ_UNIT=="A01",]
newset2_a02<-newset2[newset2$BIZ_UNIT=="A02",]
newset2_a03<-newset2[newset2$BIZ_UNIT=="A03",]
newset2_a04<-newset2[newset2$BIZ_UNIT=="A04",]
newset2_a05<-newset2[newset2$BIZ_UNIT=="A05",]
#업종별 아이디별 이용금액
id.biz<-group_by(newset2,ID,BIZ_UNIT)
#####################################################
set=newset2_a03
k=10
itemname<-sort(unique(as.character(set$PD_M_NM)))
lda_model<-ldafunction(set,10)
result_lda<-ldaresult_list(lda_model,itemname)
##theta table
theta<-result_lda$theta
rownames(theta)<-sort(unique(set$ID))
idx<-rownames(theta)[c(1,500,3000)]
theta_id<-cbind(as.data.frame(theta[rownames(theta) %in% idx,]),"client"=factor(idx))
theta_id<-melt(theta_id,id.var="client",variable_name = "topic")
ggplot(theta_id,aes(topic,value,fill=topic))+geom_bar(stat ="identity")+coord_flip()+facet_grid(.~client)+guides(fill=F)+ylab("theta")
idx<-rownames(theta)[c(1,500,3000)]
theta_id<-cbind(as.data.frame(theta[rownames(theta) %in% idx,]),"client"=factor(idx))
theta_id
str(theta_id)
ggplot(theta_id,aes(topic,value,fill=topic))+geom_bar(stat ="identity")+coord_flip()+facet_grid(.~client)+guides(fill=F)+ylab("theta")
theta_id<-melt(theta_id,id.var="client",variable_name = "topic")
ggplot(theta_id,aes(topic,value,fill=topic))+geom_bar(stat ="identity")+coord_flip()+facet_grid(.~client)+guides(fill=F)+ylab("theta")
theta_id
theta_id<-melt(theta_id,id.var="client",variable.name =topic)
idx<-rownames(theta)[c(1,500,3000)]
theta_id<-cbind(as.data.frame(theta[rownames(theta) %in% idx,]),"client"=factor(idx))
theta_id<-melt(theta_id,id.var="client",variable.name =topic)
idx<-rownames(theta)[c(1,500,3000)]
theta_id<-cbind(as.data.frame(theta[rownames(theta) %in% idx,]),"client"=factor(idx))
theta_id<-melt(theta_id,id.var="client",variable.name ="topic")
theta_id
ggplot(theta_id,aes(topic,value,fill=topic))+geom_bar(stat ="identity")+coord_flip()+facet_grid(.~client)+guides(fill=F)+ylab("theta")
# LDA모델 분석 테이블_리스트
ldaresult_list<-function(lda,itemname){
resultlist<-list()
theta<-t(lda$document_sums)# document_sum : 특정 토픽에 존재하는 아이템 구매 빈도(id별) , id vs topic
for (i in 1:nrow(theta)) theta[i,] = theta[i,]/sum(theta[i,])
k<-ncol(theta)
phi<-lda$topics   # item vs topic
for(i in 1:k) phi[i,] = phi[i,]/sum(phi[i,])
p=colSums(lda$topics)/sum(lda$topics)  ## 단일 품목의 support 특정상품빈도/전체빈도
w<-ncol(phi)-1
p<-p[-1]
phi<-phi[,-1]
lift = matrix(0,nrow=k,ncol=w)
colnames(lift)<-itemname
for (i in 1:k){
lift[i,p!=0]=phi[i,p!=0]/p[p!=0]
if(length(lift[i,p==0])!=0){
lift[i,p==0]=0
}
}
topic_name<-c()  ##lift 값 기준 크기순 2개의 아이템
for (i in 1:k){
sorted=sort(lift[i,],decreasing = T)[1:2]
topic_name<-append(topic_name,paste(names(sorted),collapse = "-"))
}
colnames(theta)<paste0(c(1:k),".",topic_name)
#colnames(theta)<-paste0("Topic",c(1:k))
resultlist[[1]]<-theta
resultlist[[2]]<-phi
resultlist[[3]]<-p
resultlist[[4]]<-lift
names(resultlist)<-c("theta","phi","p","lift")
return(resultlist)
}
result_lda<-ldaresult_list(lda_model,itemname)
##theta table
theta<-result_lda$theta
rownames(theta)<-sort(unique(set$ID))
idx<-rownames(theta)[c(1,500,3000)]
theta_id<-cbind(as.data.frame(theta[rownames(theta) %in% idx,]),"client"=factor(idx))
theta_id<-melt(theta_id,id.var="client",variable.name ="topic")
ggplot(theta_id,aes(topic,value,fill=topic))+geom_bar(stat ="identity")+coord_flip()+facet_grid(.~client)+guides(fill=F)+ylab("theta")
theta
##theta table
theta<-result_lda$theta
rownames(theta)<-sort(unique(set$ID))
idx<-rownames(theta)[c(1,500,3000)]
theta_id<-cbind(as.data.frame(theta[rownames(theta) %in% idx,]),"client"=factor(idx))
theta_id<-melt(theta_id,id.var="client",variable.name ="topic")
ggplot(theta_id,aes(topic,value,fill=topic))+geom_bar(stat ="identity")+coord_flip()+facet_grid(.~client)+guides(fill=F)+ylab("theta")
##id별 토픽 부여
theta
ldafunction<-function(data,k){
itemfreq<-recast(data,data$ID~data$PD_M_NM)
itemfreq2<-melt(itemfreq,id=names(itemfreq)[1])
itemfreq2<-itemfreq2[order(itemfreq2[,1]),]
itemname<-as.character(unique(itemfreq2$variable))
w<-length(itemname)
alpha<-1/k
beta<-1/w
itemfreq2$variable<-rep(1:length(unique(itemfreq2$variable)),length(unique(itemfreq2[,1])))
itemfreq2<-itemfreq2[itemfreq2$value!=0,]
itemname<-data.frame("품목"=itemname)
write.table(itemname,"itemname.txt")
pr(itemfreq2,"쇼핑")
shop<-read.documents("쇼핑.dat")
item_name<-read.vocab("itemname.txt")
lda<-lda.collapsed.gibbs.sampler(shop,k,item_name,500,alpha,beta)
return(lda)
}
# LDA모델 분석 테이블_리스트
ldaresult_list<-function(lda,itemname){
resultlist<-list()
theta<-t(lda$document_sums)# document_sum : 특정 토픽에 존재하는 아이템 구매 빈도(id별) , id vs topic
for (i in 1:nrow(theta)) theta[i,] = theta[i,]/sum(theta[i,])
k<-ncol(theta)
phi<-lda$topics   # item vs topic
for(i in 1:k) phi[i,] = phi[i,]/sum(phi[i,])
p=colSums(lda$topics)/sum(lda$topics)  ## 단일 품목의 support 특정상품빈도/전체빈도
w<-ncol(phi)-1
p<-p[-1]
phi<-phi[,-1]
lift = matrix(0,nrow=k,ncol=w)
colnames(lift)<-itemname
for (i in 1:k){
lift[i,p!=0]=phi[i,p!=0]/p[p!=0]
if(length(lift[i,p==0])!=0){
lift[i,p==0]=0
}
}
topic_name<-c()  ##lift 값 기준 크기순 2개의 아이템
for (i in 1:k){
sorted=sort(lift[i,],decreasing = T)[1:2]
topic_name<-append(topic_name,paste(names(sorted),collapse = "-"))
}
colnames(theta)<-paste0(c(1:k),".",topic_name)
#colnames(theta)<-paste0("Topic",c(1:k))
resultlist[[1]]<-theta
resultlist[[2]]<-phi
resultlist[[3]]<-p
resultlist[[4]]<-lift
names(resultlist)<-c("theta","phi","p","lift")
return(resultlist)
}
result_lda<-ldaresult_list(lda_model,itemname)
##theta table
theta<-result_lda$theta
rownames(theta)<-sort(unique(set$ID))
idx<-rownames(theta)[c(1,500,3000)]
theta_id<-cbind(as.data.frame(theta[rownames(theta) %in% idx,]),"client"=factor(idx))
theta_id<-melt(theta_id,id.var="client",variable.name ="topic")
ggplot(theta_id,aes(topic,value,fill=topic))+geom_bar(stat ="identity")+coord_flip()+facet_grid(.~client)+guides(fill=F)+ylab("theta")
##id별 토픽 부여
id.topic<-ifelse(theta>=0.2,1,0)
# 각 토픽 설명을 위함
topicN<-1
##phi
phi<-result_lda$phi
phi_topic<-data.frame(value=sort(phi[topicN,],decreasing = T)[1:10])
ggplot(phi_topic,aes(reorder(rownames(phi_topic),value),value,fill=value))+geom_bar(stat="identity")+coord_flip()+xlab("Item(TopN30)")+ylab("Phi")
##lift
lift<-result_lda$lift
lift_topic<-data.frame(lift=sort(lift[topicN,],decreasing = T)[1:10])
ggplot(lift_topic,aes(reorder(rownames(lift_topic),lift),lift,fill=lift))+geom_bar(stat="identity")+coord_flip()+xlab("Item(TopN30)")+ylab("Lift")
##각 토픽 별 나이대 분포
prdtable<-data.frame()
for (i in 1:k){
t<-id.topic[id.topic[,i]==1,]
AGE<-set1[set1$ID %in% rownames(t),3]
t<-data.frame(AGE,"Topic"=i)
prdtable<-rbind(prdtable,t)
}
prd<-reshape2::recast(prdtable,AGE~prdtable$Topic)
prd<-melt(prd);
p<-unlist(tapply(prd$value, prd$variable, function(x) x/sum(x)))
prd<-cbind(prd,p)
ggplot(prd,aes(variable,p,fill=AGE))+geom_bar(stat="identity")
theta<-result_lda$theta
rownames(theta)<-sort(unique(set$ID))
idx<-rownames(theta)[c(1,500,3000)]
theta_id<-cbind(as.data.frame(theta[rownames(theta) %in% idx,]),"client"=factor(idx))
theta_id<-melt(theta_id,id.var="client",variable.name ="topic")
ggplot(theta_id,aes(topic,value,fill=topic))+geom_bar(stat ="identity")+coord_flip()+facet_grid(.~client)+guides(fill=F)+ylab("theta")
##id별 토픽 부여
id.topic<-ifelse(theta>=0.2,1,0)
# 각 토픽 설명을 위함
topicN<-3
##phi
phi<-result_lda$phi
phi_topic<-data.frame(value=sort(phi[topicN,],decreasing = T)[1:10])
ggplot(phi_topic,aes(reorder(rownames(phi_topic),value),value,fill=value))+geom_bar(stat="identity")+coord_flip()+xlab("Item(TopN30)")+ylab("Phi")
##lift
lift<-result_lda$lift
lift_topic<-data.frame(lift=sort(lift[topicN,],decreasing = T)[1:10])
ggplot(lift_topic,aes(reorder(rownames(lift_topic),lift),lift,fill=lift))+geom_bar(stat="identity")+coord_flip()+xlab("Item(TopN30)")+ylab("Lift")
table(apply(id.topic,1,sum))#몇개의 토픽이 선택되었는가 빈도
topic_cN<-apply(id.topic,1,sum)
#c개의 토픽이 선택된 아이디
t=c(1) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-id.topic[rownames(id.topic) %in% names(topic_cN[topic_cN==c]),]
#t토픽을 택한 id
basket_id<-c()
for (i in t){
basket_id<-append(basket_id,names(ct_id[ct_id[,i]==1,i]))
}
basket_id<-unique(basket_id)
basket_set<-set[set$ID %in% basket_id,]
###market basket
basket<-tapply(as.character(basket_set$PD_M_NM),as.character(basket_set$ID),unique)
basket<-sapply(basket,list)
basket_tran<-as(basket,"transactions")
summary(basket_tran)
basket_crossmat<-crossTable(basket_tran)
itemFrequencyPlot(basket_tran,topN=30)
rule<-apriori(basket_tran,parameter = list(support=0.2,confidence=0.8))
rule<-sort(rule,decreasing=TRUE,by="support")
inspect(rule)
rule<-apriori(basket_tran,parameter = list(support=0.2,confidence=0.8))
rule<-sort(rule,decreasing=TRUE,by="support")
rule<-apriori(basket_tran,parameter = list(support=0.3,confidence=0.8))
rule<-sort(rule,decreasing=TRUE,by="support")
inspect(rule)
itemFrequencyPlot(basket_tran,topN=30)
rule<-apriori(basket_tran,parameter = list(support=0.3,confidence=0.8))
rule<-sort(rule,decreasing=TRUE,by="lift")
inspect(rule)
rule_label<-labels(rule[1:50])
rulemat<-sapply(rule_label,strsplit," => ",USE.NAMES = F)
rulemat<-do.call("rbind",rulemat)
ruleg<-graph.edgelist(rulemat,directed = T)
plot.igraph(ruleg,edge.arrow.size=0.4,vertex.label.color="black",vertex.color="orange")
rule_label<-labels(rule[1:30])
rulemat<-sapply(rule_label,strsplit," => ",USE.NAMES = F)
rulemat<-do.call("rbind",rulemat)
ruleg<-graph.edgelist(rulemat,directed = T)
plot.igraph(ruleg,edge.arrow.size=0.4,vertex.label.color="black",vertex.color="orange")
itemFrequencyPlot(basket_tran,topN=30)
rule<-apriori(basket_tran,parameter = list(support=0.3,confidence=0.8))
rule<-sort(rule,decreasing=TRUE,by="support")
inspect(rule)
rule_label<-labels(rule[1:30])
rulemat<-sapply(rule_label,strsplit," => ",USE.NAMES = F)
rulemat<-do.call("rbind",rulemat)
ruleg<-graph.edgelist(rulemat,directed = T)
plot.igraph(ruleg,edge.arrow.size=0.4,vertex.label.color="black",vertex.color="orange")
#c개의 토픽이 선택된 아이디
t=c(1,2) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-id.topic[rownames(id.topic) %in% names(topic_cN[topic_cN==c]),]
#t토픽을 택한 id
basket_id<-c()
for (i in t){
basket_id<-append(basket_id,names(ct_id[ct_id[,i]==1,i]))
}
basket_id<-unique(basket_id)
basket_set<-set[set$ID %in% basket_id,]
ct_id
t=c(1) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-id.topic[rownames(id.topic) %in% names(topic_cN[topic_cN==c]),]
#t토픽을 택한 id
ct_id
names(topic_cN[topic_cN==c])
apply(id.topic,1,sum)
ct_id
id.topic
ct_id<-id.topic[rownames(id.topic)==c,]
ct_id
ct_id<-id.topic[rownames(id.topic) %in% c,]
ct_id
ct_id<-id.topic[topic_cN==c,]
ct_id
apply(ct_id,2,sum)
apply(ct_id,1,sum)
table(apply(ct_id,1,sum))
c=2
ct_id<-id.topic[topic_cN==c,]
table(apply(ct_id,1,sum))
t=c(1) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id
ct_id
ct_id[ct_id[1,]==1,]
C=2
의 토픽이 선택된 아이디
t=c(1) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
t=c(1,2) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-id.topic[topic_cN==c,]
ct_id[ct_id[1,]==1,]
ct_id[1,]
ct_id[ct_id[,1]==1,]
ct_id
ct_id[t,]
ct_id[,t]
ct_id<-ct_id[,t]
ct_id
apply(ct_id,2,sum)
apply(ct_id,1,sum)
t=c(1,2) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-ct_id[,t]
ct_id<-ct_id[,apply(ct_id,1,sum)==c]
apply(ct_id,1,sum)
t=c(1,2) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-ct_id[,t]
ct_id<-ct_id[apply(ct_id,1,sum)==c,]
ct_id
t=c(1) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-ct_id[,t]
ct_id<-ct_id[apply(ct_id,1,sum)==c,]
apply(ct_id,1,sum)==c
apply(ct_id,1,sum)
t=c(1,2) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-ct_id[,t]
ct_id<-id.topic[,t]
ct_id
apply(ct_id,1,sum)
ct_id<-id.topic[,t]
ct_id<-ct_id[apply(ct_id,1,sum)==c,]
ct_id
apply(ct_id,1,sum)
t=c(1,2) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-id.topic[,t]
apply(ct_id,1,sum)==c
ct_id<-id.topic[,t]
ct_id
ct_id<-ct_id[apply(ct_id,1,sum)==c,]
ct_id
t=c(1) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-id.topic[,t]
ct_id<-ct_id[apply(ct_id,1,sum)==c,]
apply(ct_id,1,sum)==c
#c개의 토픽이 선택된 아이디
t=c(1,2) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-id.topic[,t]
apply(ct_id,1,sum)==c
apply(ct_id,1,sum)==c
(apply(ct_id,1,sum)==c)[TRUE]
apply(ct_id,1,sum)
ct_id<-id.topic[apply(ct_id,1,sum)==c,]
ct_id
t=c(1,2,3) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-id.topic[,t]
ct_id<-id.topic[apply(ct_id,1,sum)==c,]
ct_id
id.topic<-ifelse(theta>=0.3,1,0)
# 각 토픽 설명을 위함
id.topic
apply(id.topic,1,sum)
apply(id.topic,2,sum)
id.topic<-ifelse(theta>=0.3,1,0)
apply(id.topic,2,sum)
ct_id<-id.topic[,t]
ct_id<-rownames(id.topic[apply(ct_id,1,sum)==c,])
ct_id
t=c(1,2,5) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-id.topic[,t]
ct_id<-rownames(id.topic[apply(ct_id,1,sum)==c,])
ct_id
t=c(1,3) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-id.topic[,t]
ct_id<-rownames(id.topic[apply(ct_id,1,sum)==c,])
ct_id
t=c(6) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-id.topic[,t]
ct_id<-rownames(id.topic[apply(ct_id,1,sum)==c,])
ct_id
t=c(6) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-data.frame(id.topic[,t])
ct_id<-rownames(id.topic[apply(ct_id,1,sum)==c,])
ct_id
t=c(6) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-data.frame(id.topic[,t])
id.topic[apply(ct_id,1,sum)==c,]
topicN<-6
##phi
phi<-result_lda$phi
phi_topic<-data.frame(value=sort(phi[topicN,],decreasing = T)[1:10])
ggplot(phi_topic,aes(reorder(rownames(phi_topic),value),value,fill=value))+geom_bar(stat="identity")+coord_flip()+xlab("Item(TopN30)")+ylab("Phi")
basket_set<-set[set$ID %in% ct_id,]
###market basket
basket<-tapply(as.character(basket_set$PD_M_NM),as.character(basket_set$ID),unique)
basket<-sapply(basket,list)
basket_tran<-as(basket,"transactions")
summary(basket_tran)
basket_crossmat<-crossTable(basket_tran)
basket_tran
ct_id
ct_id<-rownames(id.topic[apply(ct_id,1,sum)==c,])
head(ct_id)
t=c(6) ## 해당된 토픽이 선택된 아이디 추출
c=length(t)
ct_id<-data.frame(id.topic[,t])
ct_id
apply(ct_id,1,sum)
rownames(id.topic[apply(ct_id,1,sum)==c,])
ct_id<-rownames(id.topic[apply(ct_id,1,sum)==c,])
ct_id
basket_set<-set[set$ID %in% ct_id,]
basket_set
basket<-tapply(as.character(basket_set$PD_M_NM),as.character(basket_set$ID),unique)
basket<-sapply(basket,list)
basket
basket_tran<-as(basket,"transactions")
summary(basket_tran)
basket_crossmat<-crossTable(basket_tran)
itemFrequencyPlot(basket_tran,topN=30)
rule<-apriori(basket_tran,parameter = list(support=0.3,confidence=0.8))
rule<-sort(rule,decreasing=TRUE,by="support")
inspect(rule)
rule_label<-labels(rule[1:30])
rulemat<-sapply(rule_label,strsplit," => ",USE.NAMES = F)
rulemat<-do.call("rbind",rulemat)
ruleg<-graph.edgelist(rulemat,directed = T)
plot.igraph(ruleg,edge.arrow.size=0.4,vertex.label.color="black",vertex.color="orange")
rule_label<-labels(rule[1:50])
rulemat<-sapply(rule_label,strsplit," => ",USE.NAMES = F)
rulemat<-do.call("rbind",rulemat)
ruleg<-graph.edgelist(rulemat,directed = T)
plot.igraph(ruleg,edge.arrow.size=0.4,vertex.label.color="black",vertex.color="orange")
rule_label<-labels(rule[1:40])
rulemat<-sapply(rule_label,strsplit," => ",USE.NAMES = F)
rulemat<-do.call("rbind",rulemat)
ruleg<-graph.edgelist(rulemat,directed = T)
plot.igraph(ruleg,edge.arrow.size=0.4,vertex.label.color="black",vertex.color="orange")
itemFrequencyPlot(basket_tran,topN=30)
rule<-apriori(basket_tran,parameter = list(support=0.3,confidence=0.8))
rule<-sort(rule,decreasing=TRUE,by="lift")
inspect(rule)
rule_label<-labels(rule[1:40])
rulemat<-sapply(rule_label,strsplit," => ",USE.NAMES = F)
rulemat<-do.call("rbind",rulemat)
ruleg<-graph.edgelist(rulemat,directed = T)
plot.igraph(ruleg,edge.arrow.size=0.4,vertex.label.color="black",vertex.color="orange")
1=="1"
TRUE==1
TRUE==0
TRUE==1
ifelse(100%2,"hi","bye")
"3"/"2"
